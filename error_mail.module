<?php
/**
 * Implements hook_theme().
 */
function error_mail_theme($existing, $type, $theme, $path) {
  return [
    'error_mail' => [
      'variables' => [
        'body' => '',
        'module' => '',
        'key' => '',
        'recipient' => '',
        'subject' => '',
      ],
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function error_mail_form_system_logging_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Create a fieldset
  $form['error_mail_fieldset'] = [
    '#type' => 'fieldset',
    '#title' => t('Error Mail'),
    '#description' => t('Settings for the Error Mail feature.'),
  ];

  // Add a new field to the fieldset
  $form['error_mail_fieldset']['mail_to'] = [
    '#type' => 'email',
    '#title' => t('E-mail to send to'),
    '#default_value' => \Drupal::config('error_mail.settings')->get('mail_to'),
    '#description' => t('If e-mail is filled in, errors will also be mailed to this email address.'),
  ];

  // Attach a custom submit handler to the form
  $form['#submit'][] = 'error_mail_logging_settings_submit';
}

/**
 * Custom submit handler for the logging settings form.
 */
function error_mail_logging_settings_submit($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  // Save the setting
  \Drupal::configFactory()->getEditable('error_mail.settings')
    ->set('mail_to', $form_state->getValue('mail_to'))
    ->save();
}

/**
 * Implements hook_mail().
 */
function error_mail_mail($key, &$message, $params) {
  if ($message['module'] == 'error_mail') {
    $message['subject'] = $message['params']['subject'];
    $message['body'] = [];
    $message['body'][] = $message['params']['body'];
    $message['headers']['Content-Type'] = $message['params']['headers']['Content-Type'];
  }
}
